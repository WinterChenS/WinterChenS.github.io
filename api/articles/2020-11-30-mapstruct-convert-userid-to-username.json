{"title":"mapstruct 高级用法之userid转换为username","slug":"2020-11-30-mapstruct-convert-userid-to-username","date":"2020-11-30T10:30:00.000Z","updated":"2022-12-01T01:32:39.783Z","comments":true,"path":"api/articles/2020-11-30-mapstruct-convert-userid-to-username.json","excerpt":null,"covers":null,"cover":"https://cdn.jsdelivr.net/gh/WinterChenS/img/posts/1628046749906558.jpg","content":"<p>mapstruct的简单用法就不讲了，看完这篇文章能获得什么呢？</p>\n<ul>\n<li>1.普通用法：将userId转换为userName？</li>\n<li>2.高级用法：一劳永逸的将userId转换为userName？</li>\n</ul>\n<p>很多时候在数据库里面只有userid而没有username的冗余信息，在entity转换为dto，vo等模型的时候需要额外的设值，mapstruct可以很方便的进行对象之间的转换，那么接下来我们就开始吧</p>\n<h2 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@author</span> winterchen</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@version</span> 1.0</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@date</span> 2020/11/27 4:52 下午</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@description</span> 项目信息</span><br><span class=\"hljs-comment\"> **/</span><br><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-meta\">@Builder</span><br><span class=\"hljs-meta\">@ToString</span><br><span class=\"hljs-meta\">@ApiModel</span>(<span class=\"hljs-string\">\"项目信息\"</span>)<br><span class=\"hljs-meta\">@NoArgsConstructor</span><br><span class=\"hljs-meta\">@AllArgsConstructor</span><br><span class=\"hljs-meta\">@EqualsAndHashCode</span>(callSuper=<span class=\"hljs-keyword\">false</span>)<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ProjectDTO</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">Serializable</span> </span>&#123;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">long</span> serialVersionUID = -<span class=\"hljs-number\">2601073448289463936L</span>;<br><br>\t\t<span class=\"hljs-comment\">// ... 省略部分字段</span><br>\t\t<br>    <span class=\"hljs-meta\">@ApiModelProperty</span>(<span class=\"hljs-string\">\"创建人\"</span>)<br>    <span class=\"hljs-keyword\">private</span> String createUserId;<br>\t\t<br>\t\t<span class=\"hljs-comment\">// 这里一定不能使用String类型，必须要自己包装一个简单的类型，因为mapstruct是根据类型进行转换的</span><br>    <span class=\"hljs-meta\">@ApiModelProperty</span>(<span class=\"hljs-string\">\"创建人名称\"</span>)<br>    <span class=\"hljs-keyword\">private</span> SimpleUserDTO createUserName;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-meta\">@Builder</span><br><span class=\"hljs-meta\">@ToString</span><br><span class=\"hljs-meta\">@NoArgsConstructor</span><br><span class=\"hljs-meta\">@AllArgsConstructor</span><br><span class=\"hljs-meta\">@ApiModel</span>(<span class=\"hljs-string\">\"基本用户信息\"</span>)<br><span class=\"hljs-meta\">@EqualsAndHashCode</span>(callSuper=<span class=\"hljs-keyword\">false</span>)<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SimpleUserDTO</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">Serializable</span> </span>&#123;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">long</span> serialVersionUID = <span class=\"hljs-number\">6889842645997918707L</span>;<br><br>    <span class=\"hljs-meta\">@ApiModelProperty</span>(<span class=\"hljs-string\">\"用户名\"</span>)<br>    <span class=\"hljs-keyword\">private</span> String userName;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@author</span> winterchen</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@version</span> 1.0</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@date</span> 2020/11/27 4:52 下午</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@description</span> 项目信息</span><br><span class=\"hljs-comment\"> **/</span><br><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-meta\">@Builder</span><br><span class=\"hljs-meta\">@ToString</span><br><span class=\"hljs-meta\">@NoArgsConstructor</span><br><span class=\"hljs-meta\">@AllArgsConstructor</span><br><span class=\"hljs-meta\">@Document</span>(collection = <span class=\"hljs-string\">\"project\"</span>)<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Project</span> </span>&#123;<br><br>\t\t<span class=\"hljs-comment\">// ... 省略部分字段   </span><br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 创建人</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@CreatedBy</span><br>    <span class=\"hljs-keyword\">private</span> String createUserId;<br><br>    <br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"普通用法\"><a href=\"#普通用法\" class=\"headerlink\" title=\"普通用法\"></a>普通用法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@author</span> winterchen</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@version</span> 1.0</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@date</span> 2020/11/28 1:48 下午</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@description</span></span><br><span class=\"hljs-comment\"> **/</span><br><span class=\"hljs-meta\">@Mapper</span>(componentModel = <span class=\"hljs-string\">\"spring\"</span>)<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ProjectMapping</span></span>&#123;<br>\t\t<br>\t\t<span class=\"hljs-comment\">// 博主这里使用的是mongodb，这里可以换成你对应的查询用户信息的类</span><br>\t\t<span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">protected</span> MongoTemplate mongoTemplate;<br>\t\t<span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">\t\t * 这里的注释主要是指定需要转换的source到target的信息，mapstruct会根据类型进行相应的转换</span><br><span class=\"hljs-comment\">\t\t * 比如 String-&gt; SimpleUserDTO</span><br><span class=\"hljs-comment\">\t\t * 所以我们需要指定属性名称，然后mapstruct会根据属性类型调用方法 SimpleUserDTO toConvertToUserName(String userId) </span><br><span class=\"hljs-comment\">\t\t **/</span><br>    <span class=\"hljs-meta\">@Mappings</span>(&#123;<br>            <span class=\"hljs-meta\">@Mapping</span>(target = <span class=\"hljs-string\">\"createUserName\"</span>, source = <span class=\"hljs-string\">\"createUserId\"</span>)<br>    &#125;)<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> ProjectDTO <span class=\"hljs-title\">toConvertToDto</span><span class=\"hljs-params\">(Project project)</span></span>;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> List&lt;ProjectDTO&gt; <span class=\"hljs-title\">toConvertToDtos</span><span class=\"hljs-params\">(List&lt;Project&gt; projects)</span></span>;<br><br>\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> SimpleUserDTO <span class=\"hljs-title\">toConvertToUserName</span><span class=\"hljs-params\">(String userId)</span> </span>&#123;<br>\t        Query query = <span class=\"hljs-keyword\">new</span> Query(Criteria.where(<span class=\"hljs-string\">\"id\"</span>).is(userId));<br>\t        User user = mongoTemplate.findOne(query, User<span class=\"hljs-class\">.<span class=\"hljs-keyword\">class</span>)</span>;<br>\t        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">null</span> != user) &#123;<br>\t            SimpleUserDTO result = SimpleUserDTO.builder()<br>\t                    .userName(user.getUserName())<br>\t                    .build();<br>\t            <span class=\"hljs-keyword\">return</span> result;<br>\t        &#125;<br>\t        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>注意点：没有使用interface而是使用abstract抽象类，主要原因是因为需要有自己的实现方法来转换userid到username</li>\n</ul>\n<p>我们看看maven编译之后的实现类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Generated</span>(<br>    value = <span class=\"hljs-string\">\"org.mapstruct.ap.MappingProcessor\"</span>,<br>    date = <span class=\"hljs-string\">\"2020-11-28T16:43:17+0800\"</span>,<br>    comments = <span class=\"hljs-string\">\"version: 1.3.1.Final, compiler: javac, environment: Java 1.8.0_251 (Oracle Corporation)\"</span><br>)<br><span class=\"hljs-meta\">@Component</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ProjectMappingImpl</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">ProjectMapping</span> </span>&#123;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> ProjectDTO <span class=\"hljs-title\">toConvertToDto</span><span class=\"hljs-params\">(Project project)</span> </span>&#123;<br>        <span class=\"hljs-keyword\">if</span> ( project == <span class=\"hljs-keyword\">null</span> ) &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;<br>        &#125;<br>        ProjectDTOBuilder projectDTO = ProjectDTO.builder();<br>\t\t\t\t<span class=\"hljs-comment\">// 重点看这里，mapstruct生成的实现类会自动调用我们定义的方法</span><br>        projectDTO.createUserName( toConvertToUserName( project.getCreateUserId() ) );<br>        projectDTO.createUserId( project.getCreateUserId() );<br>        <span class=\"hljs-keyword\">return</span> projectDTO.build();<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> List&lt;ProjectDTO&gt; <span class=\"hljs-title\">toConvertToDtos</span><span class=\"hljs-params\">(List&lt;Project&gt; projects)</span> </span>&#123;<br>        <span class=\"hljs-keyword\">if</span> ( projects == <span class=\"hljs-keyword\">null</span> ) &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;<br>        &#125;<br><br>        List&lt;ProjectDTO&gt; list = <span class=\"hljs-keyword\">new</span> ArrayList&lt;ProjectDTO&gt;( projects.size() );<br>        <span class=\"hljs-keyword\">for</span> ( Project project : projects ) &#123;<br>            list.add( toConvertToDto( project ) );<br>        &#125;<br><br>        <span class=\"hljs-keyword\">return</span> list;<br>    &#125;<br><br>\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> SimpleUserDTO <span class=\"hljs-title\">toConvertToUserName</span><span class=\"hljs-params\">(String userId)</span> </span>&#123;<br>\t\t        Query query = <span class=\"hljs-keyword\">new</span> Query(Criteria.where(<span class=\"hljs-string\">\"id\"</span>).is(userId));<br>\t\t        User user = mongoTemplate.findOne(query, User<span class=\"hljs-class\">.<span class=\"hljs-keyword\">class</span>)</span>;<br>\t\t        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">null</span> != user) &#123;<br>\t\t            SimpleUserDTO result = SimpleUserDTO.builder()<br>\t\t                    .userName(user.getUserName())<br>\t\t                    .build();<br>\t\t            <span class=\"hljs-keyword\">return</span> result;<br>\t\t        &#125;<br>\t\t        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>返回的结果：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">&#123;<br>  <span class=\"hljs-attr\">\"code\"</span>: <span class=\"hljs-number\">200</span>,<br>  <span class=\"hljs-attr\">\"data\"</span>: &#123;<br>    <span class=\"hljs-attr\">\"createUserId\"</span>: <span class=\"hljs-string\">\"5fb476444dfa732e47790966\"</span>,<br>    <span class=\"hljs-attr\">\"createUserName\"</span>: &#123;<br>      <span class=\"hljs-attr\">\"userName\"</span>: <span class=\"hljs-string\">\"winter\"</span><br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"操作成功\"</span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"高级用法：一劳永逸型用法\"><a href=\"#高级用法：一劳永逸型用法\" class=\"headerlink\" title=\"高级用法：一劳永逸型用法\"></a>高级用法：一劳永逸型用法</h2><p>所谓的一劳永逸主要是解决每次都要写实现就很烦了，所以就要实现写一次后面都不用实现了，思路是这样的，ProjectMapping抽象类继续往上抽象一层，将上述的转换方法抽到上一层，以后有需要转换userid到username的需求只需要继承那个抽象类（BaseMapping）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@author</span> winterchen</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@version</span> 1.0</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@date</span> 2020/11/28 4:31 下午</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@description</span> 基本的mapping</span><br><span class=\"hljs-comment\"> **/</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">BaseMapping</span> </span>&#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">protected</span> MongoTemplate mongoTemplate;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> SimpleUserDTO <span class=\"hljs-title\">toConvertToUserName</span><span class=\"hljs-params\">(String userId)</span> </span>&#123;<br>        Query query = <span class=\"hljs-keyword\">new</span> Query(Criteria.where(<span class=\"hljs-string\">\"id\"</span>).is(userId));<br>        User user = mongoTemplate.findOne(query, User<span class=\"hljs-class\">.<span class=\"hljs-keyword\">class</span>)</span>;<br>        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">null</span> != user) &#123;<br>            SimpleUserDTO result = SimpleUserDTO.builder()<br>                    .userName(user.getUserName())<br>                    .build();<br>            <span class=\"hljs-keyword\">return</span> result;<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@author</span> winterchen</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@version</span> 1.0</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@date</span> 2020/11/28 1:48 下午</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@description</span></span><br><span class=\"hljs-comment\"> **/</span><br><span class=\"hljs-meta\">@Mapper</span>(componentModel = <span class=\"hljs-string\">\"spring\"</span>)<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ProjectMapping</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">BaseMapping</span></span>&#123;<br><br>    <span class=\"hljs-meta\">@Mappings</span>(&#123;<br>            <span class=\"hljs-meta\">@Mapping</span>(target = <span class=\"hljs-string\">\"createUserName\"</span>, source = <span class=\"hljs-string\">\"createUserId\"</span>)<br>    &#125;)<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> ProjectDTO <span class=\"hljs-title\">toConvertToDto</span><span class=\"hljs-params\">(Project project)</span></span>;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> List&lt;ProjectDTO&gt; <span class=\"hljs-title\">toConvertToDtos</span><span class=\"hljs-params\">(List&lt;Project&gt; projects)</span></span>;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>以上就可以使用了，只需要继承这个抽象类就可以，前提是DTO，VO中的属性类型是SimpleUserDTO</p>\n<h2 id=\"拓展\"><a href=\"#拓展\" class=\"headerlink\" title=\"拓展\"></a>拓展</h2><p>按照这种方式其实可以举一反三，以后遇到需要获取源对象内子对象的某个属性到DTO、VO的属性字段也可以使用这种方式</p>\n","more":"<p>mapstruct的简单用法就不讲了，看完这篇文章能获得什么呢？</p>\n<ul>\n<li>1.普通用法：将userId转换为userName？</li>\n<li>2.高级用法：一劳永逸的将userId转换为userName？</li>\n</ul>\n<p>很多时候在数据库里面只有userid而没有username的冗余信息，在entity转换为dto，vo等模型的时候需要额外的设值，mapstruct可以很方便的进行对象之间的转换，那么接下来我们就开始吧</p>\n<h2 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@author</span> winterchen</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@version</span> 1.0</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@date</span> 2020/11/27 4:52 下午</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@description</span> 项目信息</span><br><span class=\"hljs-comment\"> **/</span><br><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-meta\">@Builder</span><br><span class=\"hljs-meta\">@ToString</span><br><span class=\"hljs-meta\">@ApiModel</span>(<span class=\"hljs-string\">\"项目信息\"</span>)<br><span class=\"hljs-meta\">@NoArgsConstructor</span><br><span class=\"hljs-meta\">@AllArgsConstructor</span><br><span class=\"hljs-meta\">@EqualsAndHashCode</span>(callSuper=<span class=\"hljs-keyword\">false</span>)<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ProjectDTO</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">Serializable</span> </span>&#123;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">long</span> serialVersionUID = -<span class=\"hljs-number\">2601073448289463936L</span>;<br><br>\t\t<span class=\"hljs-comment\">// ... 省略部分字段</span><br>\t\t<br>    <span class=\"hljs-meta\">@ApiModelProperty</span>(<span class=\"hljs-string\">\"创建人\"</span>)<br>    <span class=\"hljs-keyword\">private</span> String createUserId;<br>\t\t<br>\t\t<span class=\"hljs-comment\">// 这里一定不能使用String类型，必须要自己包装一个简单的类型，因为mapstruct是根据类型进行转换的</span><br>    <span class=\"hljs-meta\">@ApiModelProperty</span>(<span class=\"hljs-string\">\"创建人名称\"</span>)<br>    <span class=\"hljs-keyword\">private</span> SimpleUserDTO createUserName;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-meta\">@Builder</span><br><span class=\"hljs-meta\">@ToString</span><br><span class=\"hljs-meta\">@NoArgsConstructor</span><br><span class=\"hljs-meta\">@AllArgsConstructor</span><br><span class=\"hljs-meta\">@ApiModel</span>(<span class=\"hljs-string\">\"基本用户信息\"</span>)<br><span class=\"hljs-meta\">@EqualsAndHashCode</span>(callSuper=<span class=\"hljs-keyword\">false</span>)<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SimpleUserDTO</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">Serializable</span> </span>&#123;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">long</span> serialVersionUID = <span class=\"hljs-number\">6889842645997918707L</span>;<br><br>    <span class=\"hljs-meta\">@ApiModelProperty</span>(<span class=\"hljs-string\">\"用户名\"</span>)<br>    <span class=\"hljs-keyword\">private</span> String userName;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@author</span> winterchen</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@version</span> 1.0</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@date</span> 2020/11/27 4:52 下午</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@description</span> 项目信息</span><br><span class=\"hljs-comment\"> **/</span><br><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-meta\">@Builder</span><br><span class=\"hljs-meta\">@ToString</span><br><span class=\"hljs-meta\">@NoArgsConstructor</span><br><span class=\"hljs-meta\">@AllArgsConstructor</span><br><span class=\"hljs-meta\">@Document</span>(collection = <span class=\"hljs-string\">\"project\"</span>)<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Project</span> </span>&#123;<br><br>\t\t<span class=\"hljs-comment\">// ... 省略部分字段   </span><br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 创建人</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-meta\">@CreatedBy</span><br>    <span class=\"hljs-keyword\">private</span> String createUserId;<br><br>    <br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"普通用法\"><a href=\"#普通用法\" class=\"headerlink\" title=\"普通用法\"></a>普通用法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@author</span> winterchen</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@version</span> 1.0</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@date</span> 2020/11/28 1:48 下午</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@description</span></span><br><span class=\"hljs-comment\"> **/</span><br><span class=\"hljs-meta\">@Mapper</span>(componentModel = <span class=\"hljs-string\">\"spring\"</span>)<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ProjectMapping</span></span>&#123;<br>\t\t<br>\t\t<span class=\"hljs-comment\">// 博主这里使用的是mongodb，这里可以换成你对应的查询用户信息的类</span><br>\t\t<span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">protected</span> MongoTemplate mongoTemplate;<br>\t\t<span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">\t\t * 这里的注释主要是指定需要转换的source到target的信息，mapstruct会根据类型进行相应的转换</span><br><span class=\"hljs-comment\">\t\t * 比如 String-&gt; SimpleUserDTO</span><br><span class=\"hljs-comment\">\t\t * 所以我们需要指定属性名称，然后mapstruct会根据属性类型调用方法 SimpleUserDTO toConvertToUserName(String userId) </span><br><span class=\"hljs-comment\">\t\t **/</span><br>    <span class=\"hljs-meta\">@Mappings</span>(&#123;<br>            <span class=\"hljs-meta\">@Mapping</span>(target = <span class=\"hljs-string\">\"createUserName\"</span>, source = <span class=\"hljs-string\">\"createUserId\"</span>)<br>    &#125;)<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> ProjectDTO <span class=\"hljs-title\">toConvertToDto</span><span class=\"hljs-params\">(Project project)</span></span>;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> List&lt;ProjectDTO&gt; <span class=\"hljs-title\">toConvertToDtos</span><span class=\"hljs-params\">(List&lt;Project&gt; projects)</span></span>;<br><br>\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> SimpleUserDTO <span class=\"hljs-title\">toConvertToUserName</span><span class=\"hljs-params\">(String userId)</span> </span>&#123;<br>\t        Query query = <span class=\"hljs-keyword\">new</span> Query(Criteria.where(<span class=\"hljs-string\">\"id\"</span>).is(userId));<br>\t        User user = mongoTemplate.findOne(query, User<span class=\"hljs-class\">.<span class=\"hljs-keyword\">class</span>)</span>;<br>\t        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">null</span> != user) &#123;<br>\t            SimpleUserDTO result = SimpleUserDTO.builder()<br>\t                    .userName(user.getUserName())<br>\t                    .build();<br>\t            <span class=\"hljs-keyword\">return</span> result;<br>\t        &#125;<br>\t        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>注意点：没有使用interface而是使用abstract抽象类，主要原因是因为需要有自己的实现方法来转换userid到username</li>\n</ul>\n<p>我们看看maven编译之后的实现类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Generated</span>(<br>    value = <span class=\"hljs-string\">\"org.mapstruct.ap.MappingProcessor\"</span>,<br>    date = <span class=\"hljs-string\">\"2020-11-28T16:43:17+0800\"</span>,<br>    comments = <span class=\"hljs-string\">\"version: 1.3.1.Final, compiler: javac, environment: Java 1.8.0_251 (Oracle Corporation)\"</span><br>)<br><span class=\"hljs-meta\">@Component</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ProjectMappingImpl</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">ProjectMapping</span> </span>&#123;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> ProjectDTO <span class=\"hljs-title\">toConvertToDto</span><span class=\"hljs-params\">(Project project)</span> </span>&#123;<br>        <span class=\"hljs-keyword\">if</span> ( project == <span class=\"hljs-keyword\">null</span> ) &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;<br>        &#125;<br>        ProjectDTOBuilder projectDTO = ProjectDTO.builder();<br>\t\t\t\t<span class=\"hljs-comment\">// 重点看这里，mapstruct生成的实现类会自动调用我们定义的方法</span><br>        projectDTO.createUserName( toConvertToUserName( project.getCreateUserId() ) );<br>        projectDTO.createUserId( project.getCreateUserId() );<br>        <span class=\"hljs-keyword\">return</span> projectDTO.build();<br>    &#125;<br><br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> List&lt;ProjectDTO&gt; <span class=\"hljs-title\">toConvertToDtos</span><span class=\"hljs-params\">(List&lt;Project&gt; projects)</span> </span>&#123;<br>        <span class=\"hljs-keyword\">if</span> ( projects == <span class=\"hljs-keyword\">null</span> ) &#123;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;<br>        &#125;<br><br>        List&lt;ProjectDTO&gt; list = <span class=\"hljs-keyword\">new</span> ArrayList&lt;ProjectDTO&gt;( projects.size() );<br>        <span class=\"hljs-keyword\">for</span> ( Project project : projects ) &#123;<br>            list.add( toConvertToDto( project ) );<br>        &#125;<br><br>        <span class=\"hljs-keyword\">return</span> list;<br>    &#125;<br><br>\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> SimpleUserDTO <span class=\"hljs-title\">toConvertToUserName</span><span class=\"hljs-params\">(String userId)</span> </span>&#123;<br>\t\t        Query query = <span class=\"hljs-keyword\">new</span> Query(Criteria.where(<span class=\"hljs-string\">\"id\"</span>).is(userId));<br>\t\t        User user = mongoTemplate.findOne(query, User<span class=\"hljs-class\">.<span class=\"hljs-keyword\">class</span>)</span>;<br>\t\t        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">null</span> != user) &#123;<br>\t\t            SimpleUserDTO result = SimpleUserDTO.builder()<br>\t\t                    .userName(user.getUserName())<br>\t\t                    .build();<br>\t\t            <span class=\"hljs-keyword\">return</span> result;<br>\t\t        &#125;<br>\t\t        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>返回的结果：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">&#123;<br>  <span class=\"hljs-attr\">\"code\"</span>: <span class=\"hljs-number\">200</span>,<br>  <span class=\"hljs-attr\">\"data\"</span>: &#123;<br>    <span class=\"hljs-attr\">\"createUserId\"</span>: <span class=\"hljs-string\">\"5fb476444dfa732e47790966\"</span>,<br>    <span class=\"hljs-attr\">\"createUserName\"</span>: &#123;<br>      <span class=\"hljs-attr\">\"userName\"</span>: <span class=\"hljs-string\">\"winter\"</span><br>    &#125;<br>  &#125;,<br>  <span class=\"hljs-attr\">\"message\"</span>: <span class=\"hljs-string\">\"操作成功\"</span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"高级用法：一劳永逸型用法\"><a href=\"#高级用法：一劳永逸型用法\" class=\"headerlink\" title=\"高级用法：一劳永逸型用法\"></a>高级用法：一劳永逸型用法</h2><p>所谓的一劳永逸主要是解决每次都要写实现就很烦了，所以就要实现写一次后面都不用实现了，思路是这样的，ProjectMapping抽象类继续往上抽象一层，将上述的转换方法抽到上一层，以后有需要转换userid到username的需求只需要继承那个抽象类（BaseMapping）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@author</span> winterchen</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@version</span> 1.0</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@date</span> 2020/11/28 4:31 下午</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@description</span> 基本的mapping</span><br><span class=\"hljs-comment\"> **/</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">BaseMapping</span> </span>&#123;<br><br>    <span class=\"hljs-meta\">@Autowired</span><br>    <span class=\"hljs-keyword\">protected</span> MongoTemplate mongoTemplate;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> SimpleUserDTO <span class=\"hljs-title\">toConvertToUserName</span><span class=\"hljs-params\">(String userId)</span> </span>&#123;<br>        Query query = <span class=\"hljs-keyword\">new</span> Query(Criteria.where(<span class=\"hljs-string\">\"id\"</span>).is(userId));<br>        User user = mongoTemplate.findOne(query, User<span class=\"hljs-class\">.<span class=\"hljs-keyword\">class</span>)</span>;<br>        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">null</span> != user) &#123;<br>            SimpleUserDTO result = SimpleUserDTO.builder()<br>                    .userName(user.getUserName())<br>                    .build();<br>            <span class=\"hljs-keyword\">return</span> result;<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@author</span> winterchen</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@version</span> 1.0</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@date</span> 2020/11/28 1:48 下午</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@description</span></span><br><span class=\"hljs-comment\"> **/</span><br><span class=\"hljs-meta\">@Mapper</span>(componentModel = <span class=\"hljs-string\">\"spring\"</span>)<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ProjectMapping</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">BaseMapping</span></span>&#123;<br><br>    <span class=\"hljs-meta\">@Mappings</span>(&#123;<br>            <span class=\"hljs-meta\">@Mapping</span>(target = <span class=\"hljs-string\">\"createUserName\"</span>, source = <span class=\"hljs-string\">\"createUserId\"</span>)<br>    &#125;)<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> ProjectDTO <span class=\"hljs-title\">toConvertToDto</span><span class=\"hljs-params\">(Project project)</span></span>;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> List&lt;ProjectDTO&gt; <span class=\"hljs-title\">toConvertToDtos</span><span class=\"hljs-params\">(List&lt;Project&gt; projects)</span></span>;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>以上就可以使用了，只需要继承这个抽象类就可以，前提是DTO，VO中的属性类型是SimpleUserDTO</p>\n<h2 id=\"拓展\"><a href=\"#拓展\" class=\"headerlink\" title=\"拓展\"></a>拓展</h2><p>按照这种方式其实可以举一反三，以后遇到需要获取源对象内子对象的某个属性到DTO、VO的属性字段也可以使用这种方式</p>\n","categories":[{"name":"springboot","path":"api/categories/springboot.json"}],"tags":[{"name":"mapstruct","path":"api/tags/mapstruct.json"}]}